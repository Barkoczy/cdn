server {
    listen 80;
    server_name localhost;

    # Security headers
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    
    # Disable server signature
    server_tokens off;
    
    # Prevent access to hidden files
    location ~ /\. {
        deny all;
        return 404;
    }

    # Set client max body size for large uploads (10GB)
    client_max_body_size 10G;
    
    # Optimized client body settings
    client_body_buffer_size 128M;
    client_body_timeout 3600s;
    client_header_timeout 60s;

    # Gzip configuration for better performance
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    # Define custom error pages
    error_page 404 /custom-404.html;
    error_page 403 /custom-403.html;
    error_page 500 502 503 504 /custom-50x.html;
    
    # Custom error pages handlers
    location = /custom-404.html {
        default_type application/json;
        return 404 '{"error":"Not Found","message":"The requested resource does not exist"}';
    }
    
    location = /custom-403.html {
        default_type application/json;
        return 403 '{"error":"Forbidden","message":"Access denied"}';
    }
    
    location = /custom-50x.html {
        default_type application/json;
        return 500 '{"error":"Server Error","message":"An unexpected error occurred"}';
    }

    # Static files configuration
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ =404;
        
        # Disable directory listing
        autoindex off;
        
        # Disable execution of scripts
        location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
            return 403;
        }
        
        # Add CORS headers
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
        
        # Enable cross-domain webfont access
        location ~* \.(eot|otf|ttf|woff|woff2)$ {
            add_header Access-Control-Allow-Origin "*";
        }
        
        # Optimal cache control settings for CDN
        add_header Cache-Control "public, max-age=86400";
        
        # Cache settings for different file types
        location ~* \.(jpg|jpeg|png|gif|ico|svg)$ {
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
            add_header Access-Control-Allow-Origin "*";
        }
        
        location ~* \.(mp4|webm|ogg)$ {
            # Video streaming optimization
            mp4;
            mp4_buffer_size 1m;
            mp4_max_buffer_size 5m;
            
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
            add_header Access-Control-Allow-Origin "*";
        }
        
        location ~* \.json$ {
            add_header Content-Type "application/json";
            add_header Cache-Control "no-cache";
            add_header Access-Control-Allow-Origin "*";
        }
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
    }
}