services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: cdn-nginx
    expose:
      - "80"
    volumes:
      - ./static:/usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    restart: unless-stopped
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - traefik-network
      - cdn-internal

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: cdn-api
    restart: unless-stopped
    expose:
      - "3000"
    env_file:
      - .env
    environment:
      - MAX_FILE_SIZE=10737418240
      - NODE_OPTIONS=--max-http-header-size=32768 --max-old-space-size=4096
    volumes:
      - ./static:/usr/share/nginx/html
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 8G
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - traefik-network
      - cdn-internal
    depends_on:
      - nginx
      - postgres
      - redis

  postgres:
    image: postgres:15-alpine
    container_name: cdn-postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_INITDB_ARGS=--data-checksums
    volumes:
      - ./volumes/postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    command: postgres -c shared_buffers=256MB -c max_connections=200 -c statement_timeout=0
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - cdn-internal

  redis:
    image: redis:alpine
    container_name: cdn-redis
    restart: unless-stopped
    command: redis-server --requirepass $REDIS_PASSWORD --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - cdn-internal

  prometheus:
    image: prom/prometheus:latest
    container_name: cdn-prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - cdn-internal

  grafana:
    image: grafana/grafana:latest
    container_name: cdn-grafana
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    env_file:
      - .env
    expose:
      - "3000"
    depends_on:
      - prometheus
    networks:
      - cdn-internal
      - traefik-network

networks:
  traefik-network:
    external: true
  cdn-internal:
    driver: bridge

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
